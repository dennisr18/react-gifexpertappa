{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGriditem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","url","GifGriditem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBI,OACI,sBAAMC,SAbI,SAACC,GACfA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MASd,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAtBY,SAACP,GAExBF,EAAcE,EAAEQ,OAAOF,aA8BxBZ,EAAYe,UAAU,CAClBd,cAAce,IAAUC,KAAKC,Y,2CChCnBC,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEkCC,UAAUH,GAF5C,+DAICI,MAAMF,GAJP,cAIXG,EAJW,gBAMGA,EAAKC,OANR,uBAMVC,EANU,EAMVA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAEtB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBC,QAbvB,kBAkBVP,GAlBU,4CAAD,sDCLRQ,EAAc,SAAC,GAAiB,IAAhBJ,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAG/B,OACI,sBAAKe,UAAU,yCAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCHHQ,EAAW,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAGf,ECEiB,SAACA,GAC1B,MAA0BlB,mBAAS,CAC/ByB,KAAK,GACLc,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAkCA,OA7BAC,qBAAU,WAGTzB,EAAQC,GACNyB,MAAK,SAAAC,GAGHH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAQf,CAACrB,IAYIsB,EDrC+BK,CAAa3B,GAA/Ba,EAAZ,EAAON,KAAYc,EAAnB,EAAmBA,QAe1B,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAoDjB,KAClDqB,GAAW,mBAAGJ,UAAW,mCAAd,0BAEf,qBAAKA,UAAU,YAAf,SAGaJ,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADEA,EAAIC,aE1BlBiB,EAAgB,WAI1B,MAAoC9C,mBAAS,CAAC,eAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAOC,OACI,qCAEG,+CACA,cAAC,EAAD,CAAcA,cAAeA,IAC5B,uBAIA,6BAEMgD,EAAWpB,KAAK,SAAAT,GAAQ,OAGtB,cAAC,EAAD,CAGAA,SAAUA,GADJA,Y,MC7B1B8B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.4f5b44ae.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n\r\nconst [inputValue, setinputValue] = useState('');\r\nconst handleInputChange=(e)=>{\r\n\r\n setinputValue(e.target.value);\r\n}\r\n\r\nconst handleSumit=(e)=>{\r\n    e.preventDefault();\r\n    if(inputValue.trim().length>2){\r\n        setcategories(cats=>[inputValue,...cats,]);\r\n        setinputValue('');\r\n    }\r\n  //  console.log('submit hecho')\r\n\r\n \r\n}\r\n\r\n    \r\n    return (\r\n        <form onSubmit={handleSumit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n\r\n            \r\n            \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.prototype={\r\n    setcategories:PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n export const getGifs=async(category)=>{\r\n\r\n    const URL=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=jfWkhtXvWQJCMCYbIHPNUDmDiUXbISoY`;\r\n\r\n     const resp= await fetch(URL);\r\n\r\n     const {data} =await resp.json();\r\n    \r\n     const gifs=data.map(img=>{\r\n\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            URL:img.images?.downsized_medium.url\r\n        }\r\n\r\n     })\r\n\r\n     return gifs;\r\n\r\n\r\n\r\n\r\n }\r\n","import React from 'react'\r\n\r\nexport const GifGriditem = ({title,URL}) => {\r\n\r\n   // console.log(id,title,URL);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={URL} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGriditem } from './GifGriditem'; \r\n/* import { getGifs } from './helpers/getGifs'; */\r\n\r\nexport const GiftGrid = ({category}) => {\r\n\r\n//  const [images, setimages] = useState([]);\r\n           const {data:images,loading} = useFetchGifs(category);\r\n\r\n        \r\n\r\n   /* useEffect(  ()=>{\r\n       getGifs(category)\r\n       .then(setimages);\r\n   },[category]) */\r\n\r\n\r\n    \r\n    \r\n\r\n  \r\n\r\n    return (\r\n      <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\r\n         {loading && <p className =\"animate__animated animate__flash\">Loading.....</p>}\r\n       \r\n      <div className=\"card-grid\">\r\n           \r\n               {\r\n                   images.map(img=>(\r\n                     <GifGriditem\r\n                      key={img.id}\r\n                     {...img}\r\n                     />\r\n                   ))\r\n               }\r\n           \r\n      \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\n\r\n\r\n\r\n\r\n\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react/cjs/react.development';\r\nimport {getGifs} from '..//components/helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setstate] = useState({\r\n       data:[],\r\n       loading:true\r\n   });\r\n\r\n   useEffect(()=>{\r\n     \r\n   \r\n    getGifs(category)\r\n     .then(imgs=>{\r\n\r\n      \r\n        setstate({\r\n            data:imgs,\r\n            loading:false\r\n        });\r\n       \r\n\r\n       \r\n\r\n     })\r\n\r\n   },[category]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   return state;\r\n}\r\n","\r\nimport { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GiftGrid } from \"./components/GiftGrid\";\r\n\r\n\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n\r\n\r\n   const [categories, setcategories] = useState(['One Punch ' ] );\r\n\r\n\r\n //   const handleAdd=()=>{\r\n   //  setcategories(cats=>[...cats,'HunterXHunter']);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n       \r\n           <h2>GiftExpertApp</h2>\r\n           <AddCategory  setcategories={setcategories}/>\r\n            <hr />\r\n           \r\n\r\n\r\n            <ol>\r\n              {\r\n                  categories.map( category=>(\r\n                    \r\n                    \r\n                    <GiftGrid \r\n                    \r\n                    key ={category}\r\n                    category={category}\r\n                    \r\n                    \r\n                    />\r\n                  ))\r\n\r\n\r\n\r\n              }\r\n\r\n                             \r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GiftExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}